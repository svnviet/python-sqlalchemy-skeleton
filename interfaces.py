from typing import Protocol, Iterable

from dtos import AccountDTO, SymbolInfoDTO, TickDTO, OrderRequestDTO, OrderResultDTO, PositionDTO, PendingOrderDTO


class TradingGateway(Protocol):
    """Interface for any broker adapter (MT5, FIX, RESTâ€¦)"""
    def initialize(self, *, login: int | None = None, password: str | None = None,
                   server: str | None = None, path: str | None = None) -> None: ...
    def shutdown(self) -> None: ...
    def account_info(self) -> AccountDTO: ...
    def ensure_symbol(self, symbol: str) -> SymbolInfoDTO: ...
    def tick(self, symbol: str) -> TickDTO: ...
    def market_order(self, req: OrderRequestDTO) -> OrderResultDTO: ...
    def pending_order(self, req: OrderRequestDTO) -> OrderResultDTO: ...
    def positions(self, symbol: str | None = None) -> list[PositionDTO]: ...
    def orders(self, symbol: str | None = None) -> list[PendingOrderDTO]: ...
    def modify_position_sltp(self, position_ticket: int, *, sl: float, tp: float) -> OrderResultDTO: ...
    def close_position(self, position_ticket: int, deviation: int = 120) -> OrderResultDTO: ...
    def cancel_order(self, order_ticket: int) -> OrderResultDTO: ...
